@model Superior.Domain.Models.User

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .login-wrapper .validation-error {
        color: red;
    }

    .login-wrapper {
        min-height: 2000px;
    }
</style>

<div class="login-wrapper">

    @using (Html.BeginForm("CreateLogin", "Account", null, FormMethod.Post, new { id = "frmLoginSubmit" }))
    {
        <h3>Create Login</h3>

        if (ViewBag.Error != null)
        {
            <span class="error">@ViewBag.Error</span>
        }

        <label for="UserName">Username:</label>
        @Html.TextBoxFor(x => x.UserName)

        <label for="UserCredential_Password">Password:</label>
        @Html.PasswordFor(x => x.UserCredential.Password)

        <label for="ConfirmPassword">Confirm Password</label>
        <input id="ConfirmPassword" name="ConfirmPassword" type="password" />

        <input type="submit" value="login" />
    }

</div>

@section Scripts {

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script>

        $(document).ready(function () {
            $('#frmLoginSubmit').validate({
                errorElement: 'span',
                errorClass: 'validation-error',
                rules: {
                    'UserName': {
                        required: true,
                        email: true,
                        maxlength: 64
                    },
                    'UserCredential.Password': {
                        required: true,
                        maxlength: 64,
                        regex: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*(_|[^\w])).{8,}$/,
                    },
                    'ConfirmPassword': {
                        required: true,
                        equalTo: '[name="UserCredential.Password"]'
                    }
                },
                messages: {
                    'UserName': {},
                    'UserCredential.Password': {
                        regex: "Bad password (at least one lower char, upper char, digit, and symbol."
                    },
                    'ConfirmPassword': {}
                }
            });
        });

        $.validator.addMethod("regex", function (value, element, regexpr) {
            return regexpr.test(value);
        }, "Please enter a valid pasword.");
    </script>
}